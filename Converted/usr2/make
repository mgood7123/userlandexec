rm -rfv binutils-gdb
cp -rv ./tmp/binutils-gdb ./
# git clone git://sourceware.org/git/binutils-gdb.git
cd ./binutils-gdb
cwd=$(pwd)
# prepare the nessasary files and headers
./configure # needed for bfd/config.h
cd ./bfd
echo '#define BFD_VERSION_DATE 20180205
#define BFD_VERSION 230510000
#define BFD_VERSION_STRING  "(GNU Binutils) " "2.30.51.20180205"
#define REPORT_BUGS_TO "<http://www.sourceware.org/bugzilla/>"
' > bfdver.h
awk '!/^  =/ && NR > 1 { print "" } { printf "%s", $0 } END { print "" }' < ./elf.c > elf.tmp
# sed -ne H -e '${x;s/\n//;s/\n  =/ =/gp}' elf.c > elf.tmp
mv ./elf.tmp elf.c
/usr/bin/sed -e s/NN/32/g < ./elfxx-target.h > elf32-target.h
/usr/bin/sed -e s/NN/64/g < ./elfxx-target.h > elf64-target.h
/usr/bin/sed -f ./targmatch.sed < ./config.bfd > targmatch.h
./configure # resolves bdf-in3.h
cp bfd-in3.h bfd.h
# make # nessasary to resolve some undefined references
cd ../binutils # objcopy
./configure # nessasary to resolve some undefined references
cd ../zlib
./configure
cd ../libiberty
./configure # nessasary to resolve some undefined references
cd ../ld
./configure
rm -v ./ld-new_
(echo "/* This file is automatically generated.  DO NOT EDIT! */";\
for f in `echo " " eelf_x86_64.o eelf32_x86_64.o eelf_i386.o eelf_iamcu.o ei386linux.o eelf_l1om.o eelf_k1om.o "" \
 | sed -e 's/ e/ ld/g' -e 's/ ld/ /g' -e 's/[.]o//g'`; do \
    echo "extern ld_emulation_xfer_type ld_${f}_emulation;"; \
done;\
echo "";\
echo "#define EMULATION_LIST \\";\
for f in `echo " " eelf_x86_64.o eelf32_x86_64.o eelf_i386.o eelf_iamcu.o ei386linux.o eelf_l1om.o eelf_k1om.o "" \
 | sed -e 's/ e/ ld/g' -e 's/ ld/ /g' -e 's/[.]o//g'`; do \
    echo "  &ld_${f}_emulation, \\"; \
done;\
echo "  0") >ldemul-list.h
./../ylwrap ldlex.l lex.yy.c ldlex.c -- flex
./../ylwrap ldgram.y y.tab.c ldgram.c y.tab.h ldgram.h y.output ldgram.output -- bison -y  -d
cp ./emultempl/astring.sed stringify.sed
LIB_PATH='' /bin/sh ./genscripts.sh "." "/usr/local/lib" "/usr/local" "/usr/local" x86_64-pc-linux-gnu x86_64-pc-linux-gnu x86_64-pc-linux-gnu "elf_x86_64 elf_i386 elf32_x86_64 elf_l1om elf_k1om" "/usr/local/lib /lib /usr/lib" no yes elf_x86_64 "x86_64-pc-linux-gnu"

LIB_PATH='' /bin/sh ./genscripts.sh "." "/usr/local/lib" "/usr/local" "/usr/local" x86_64-pc-linux-gnu x86_64-pc-linux-gnu x86_64-pc-linux-gnu "elf_x86_64 elf_i386 elf32_x86_64 elf_l1om elf_k1om" "/usr/local/lib /lib /usr/lib" no yes elf32_x86_64 "x86_64-pc-linux-gnu"

LIB_PATH='' /bin/sh ./genscripts.sh "." "/usr/local/lib" "/usr/local" "/usr/local" x86_64-pc-linux-gnu x86_64-pc-linux-gnu x86_64-pc-linux-gnu "elf_x86_64 elf_i386 elf32_x86_64 elf_l1om elf_k1om" "/usr/local/lib /lib /usr/lib" no yes elf_i386 "i386-pc-linux-gnu"

LIB_PATH='' /bin/sh ./genscripts.sh "." "/usr/local/lib" "/usr/local" "/usr/local" x86_64-pc-linux-gnu x86_64-pc-linux-gnu x86_64-pc-linux-gnu "elf_x86_64 elf_i386 elf32_x86_64 elf_l1om elf_k1om" "/usr/local/lib /lib /usr/lib" no yes elf_iamcu "x86_64-pc-linux-gnu"

LIB_PATH='' /bin/sh ./genscripts.sh "." "/usr/local/lib" "/usr/local" "/usr/local" x86_64-pc-linux-gnu x86_64-pc-linux-gnu x86_64-pc-linux-gnu "elf_x86_64 elf_i386 elf32_x86_64 elf_l1om elf_k1om" "/usr/local/lib /lib /usr/lib" no yes i386linux "i386-pc-linux-gnuaout"

LIB_PATH='' /bin/sh ./genscripts.sh "." "/usr/local/lib" "/usr/local" "/usr/local" x86_64-pc-linux-gnu x86_64-pc-linux-gnu x86_64-pc-linux-gnu "elf_x86_64 elf_i386 elf32_x86_64 elf_l1om elf_k1om" "/usr/local/lib /lib /usr/lib" no yes elf_l1om "x86_64-pc-linux-gnu"

LIB_PATH='' /bin/sh ./genscripts.sh "." "/usr/local/lib" "/usr/local" "/usr/local" x86_64-pc-linux-gnu x86_64-pc-linux-gnu x86_64-pc-linux-gnu "elf_x86_64 elf_i386 elf32_x86_64 elf_l1om elf_k1om" "/usr/local/lib /lib /usr/lib" no yes elf_k1om "x86_64-pc-linux-gnu"

cd ../bfd
/usr/bin/sed -e s/XX/pe/g < peXXigen.c > peigen.new
mv -f peigen.new peigen.c
/usr/bin/sed -e s/XX/pex64/g < ./peXXigen.c > pex64igen.new
mv -f pex64igen.new pex64igen.c

cd ./ld
cp plugin.c ldplugin.c
cp ../bfd/compress.c ../bfd/bfdcompress.c
cp ../zlib/crc32.c ../zlib/zlibcrc32.c
cd ../
copy-if-change() {
#SLIGHTLY MODIFIED
# Like mv $1 $2, but if the files are the same, just delete $1.
# Status is zero if successful, nonzero otherwise.

VERSION='2012-01-06 07:23'; # UTC
# The definition above must lie within the first 8 lines in order
# for the Emacs time-stamp write hook (at end) to update it.
# If you change this file with Emacs, please let the write hook
# do its job.  Otherwise, update this string manually.

# Copyright (C) 2002-2014 Free Software Foundation, Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

usage="usage: $0 SOURCE DEST"

help="$usage
  or:  $0 OPTION
If SOURCE is different than DEST, then move it to DEST; else remove SOURCE.

  --help     display this help and exit
  --version  output version information and exit

The variable CMPPROG can be used to specify an alternative to 'cmp'.

Report bugs to <bug-gnulib@gnu.org>."

version=`expr "$VERSION" : '\([^ ]*\)'`
version="move-if-change (gnulib) $version
Copyright (C) 2011 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law."

cmpprog=${CMPPROG-cmp}

for arg
do
  case $arg in
    --help | --hel | --he | --h)
      exec echo "$help" ;;
    --version | --versio | --versi | --vers | --ver | --ve | --v)
      exec echo "$version" ;;
    --)
      shift
      break ;;
    -*)
      echo "$0: invalid option: $arg" >&2
      exit 1 ;;
    *)
      break ;;
  esac
done

test $# -eq 2 || { echo "$0: $usage" >&2; exit 1; }

if test -r "$2" && $cmpprog -- "$1" "$2" >/dev/null; then
    return 1
else
    return 0
#   if mv -f -- "$1" "$2"; then :; else
    # Ignore failure due to a concurrent move-if-change.
#     test -r "$2" && $cmpprog -- "$1" "$2" >/dev/null
#   fi
fi

## Local Variables:
## eval: (add-hook 'write-file-hooks 'time-stamp)
## time-stamp-start: "VERSION='"
## time-stamp-format: "%:y-%02m-%02d %02H:%02M"
## time-stamp-time-zone: "UTC"
## time-stamp-end: "'; # UTC"
## End:
}

compile_GCC() {
echo
echo
echo "args_gcc = \"$args_gcc\""
echo
echo
gcc $args_gcc -W -Wunused  -Wunused-function -Wunused  -Wunused-function -Wunused-label  -Wunused-local-typedefs -Wunused-parameter -Wno-unused-result -Wunused-value  -Wunused-variable -Wunused-const-variable -Wunused-const-variable=1 -Wunused-const-variable=2 -Wunused-but-set-parameter -Wunused-but-set-variable -Wall -Wstrict-prototypes -Wmissing-prototypes -Wwrite-strings -pedantic -Wshadow -Wstack-usage=262144 -Werror -static-libstdc++ -static-libgcc \
\
-Dbin_dummy_emulation=bin_vanilla_emulation -DHAVE_CONFIG_H -DENABLE_PLUGINS -DLOCALEDIR="\"/usr/local/share/locale\"" -DELF_LIST_OPTIONS=TRUE -DELF_SHLIB_LIST_OPTIONS=TRUE -DELF_PLT_UNWIND_LIST_OPTIONS=TRUE -DDEFAULT_EMULATION='"elf_x86_64"' -DTARGET='"x86_64-pc-linux-gnu"' -DLOCALEDIR="\"/usr/local/share/locale\"" -DBINDIR='"/usr/local/bin"' -DSCRIPTDIR='"/usr/local/x86_64-pc-linux-gnu/lib"' -DTOOLBINDIR='"/usr/local/x86_64-pc-linux-gnu/bin"' \
\
$1 \
\
\
-DHAVE_x86_64_elf64_vec -DHAVE_i386_elf32_vec -DHAVE_iamcu_elf32_vec -DHAVE_x86_64_elf32_vec -DHAVE_i386_aout_linux_vec -DHAVE_i386_pei_vec -DHAVE_x86_64_pei_vec -DHAVE_l1om_elf64_vec -DHAVE_k1om_elf64_vec -DHAVE_elf64_le_vec -DHAVE_elf64_be_vec -DHAVE_elf32_le_vec -DHAVE_elf32_be_vec -DHAVE_plugin_vec -DBINDIR=\"/usr/local/bin\" -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Wstack-usage=262144 -Werror -I./../zlib -g3 -O0 -DDEFAULT_VECTOR=x86_64_elf64_vec "-DSELECT_VECS=&x86_64_elf64_vec,&i386_elf32_vec,&iamcu_elf32_vec,&x86_64_elf32_vec,&i386_aout_linux_vec,&i386_pei_vec,&x86_64_pei_vec,&l1om_elf64_vec,&k1om_elf64_vec,&elf64_le_vec,&elf64_be_vec,&elf32_le_vec,&elf32_be_vec,&plugin_vec" "-DSELECT_ARCHITECTURES=&bfd_i386_arch,&bfd_iamcu_arch,&bfd_l1om_arch,&bfd_k1om_arch,&bfd_plugin_arch" -DHAVE_x86_64_elf64_vec -DHAVE_i386_elf32_vec -DHAVE_iamcu_elf32_vec -DHAVE_x86_64_elf32_vec -DHAVE_i386_aout_linux_vec -DHAVE_i386_pei_vec -DHAVE_x86_64_pei_vec -DHAVE_l1om_elf64_vec -DHAVE_k1om_elf64_vec -DHAVE_elf64_le_vec -DHAVE_elf64_be_vec -DHAVE_elf32_le_vec -DHAVE_elf32_be_vec -DHAVE_plugin_vec -DDEBUGDIR=\"/usr/local/lib/debug\" \
\
$2 \
\
\
-DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_STDLIB_H=1 -DHAVE_UNISTD_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MMAP=1 -DHAVE_MEMCPY=1 -DHAVE_STRERROR=1 -DHAVE_UNISTD_H=1 \
\
$3 \
\
\
-D_GNU_SOURCE \
\
$4 \
\
\
-Wno-error
}


compile_() {
mkdir object_files 2>/dev/null
mkdir shared_object_files 2>/dev/null
mkdir c_files_current 2>/dev/null
mkdir c_files_previous 2>/dev/null
mkdir c_files_original 2>/dev/null
cd object_files
# rm -v ../c_files_previous/binutils/binutils____objcopy.c
_bfd=0
_libiberty=0
_zlib=0
_ld=0
_binutils=0
binutils_files=""
ld_files=""
bfd_files=""
zlib_files=""
libiberty_files=""
missing=""
files_=""
files=""
_files=""
unset all_files
for i in $@
    do
    dir__=$(dirname $i | sed s/\.\.\\///)
    if [[ ! -e ../c_files_current/$dir__ ]]
    then
    missing_+="$dir__ "
    missing=($(printf '%b\n' $missing_ | sort -u))
    fi
done
for b in ${missing[@]}
do
# declare -p missing
for i in $@
    do
    dir=$(dirname $i | sed s/\.\.\\///)
    if [[ $dir == $b ]]
    then
    basename=$(basename $i |sed s/\.c$//)
#     declare -p basename
    mkdir ../c_files_current/$dir 2>/dev/null
    mkdir ../c_files_original/$dir 2>/dev/null
    cp -v $i ../c_files_current/$dir/${dir[0]}____$basename.c
    cp -v $i ../c_files_original/$dir/${dir[0]}____$basename.c
    fi
done
done
if [[ -e ../c_files_current && -e ../c_files_previous && -e ../c_files_original ]]
then
for i in $@
    do
    dirb="c_files_current"
    dir=$(dirname $i | sed s/\.\.\\///)
    basename=$(basename $i |sed s/\.c$//)
if [[ $(copy-if-change ../c_files_current/$dir/${dir[0]}____$basename.c ../c_files_previous/$dir/${dir[0]}____$basename.c ; echo $?) == 0 ]]
then
        echo ../c_files_current/$dir/${dir[0]}____$basename.c has changed
        mkdir ../c_files_previous/$dir 2>/dev/null
        cp -v ../c_files_current/$dir/${dir[0]}____$basename.c ../c_files_previous/$dir/
#         eval "echo \"${dir[0]}_files+=\\\"../$dirb/$dir/${dir[0]}____$basename.c \\\"\""
        eval "${dir[0]}_files+=\"../$dirb/$dir/${dir[0]}____$basename.c \""
        all_files+=("./${dir[0]}____$basename.o -o ../shared_object_files/$dir/$basename.so")
else
echo ../c_files_current/$dir/$basename.c has not changed
fi
done
if [[ $bfd_files == "" && $binutils_files == "" && $ld_files == "" && $libiberty_files == "" && $zlib_files == "" ]]
then
echo variables empty, nothing to compile
declare -p bfd_files binutils_files ld_files libiberty_files zlib_files
else
args_standard="-g3 -O0 -c -fPIC"
if [[ $bfd_files == "" ]]
then
:
else
args_gcc="$args_standard -I./../bfd -I./../include"
compile_GCC "" "$bfd_files" "" ""
fi
if [[ $binutils_files == "" ]]
then
:
else
args_gcc="$args_standard -I./../binutils -I./../bfd -I./../include -I./../zlib"
compile_GCC "$binutils_files" "" "" ""
fi
if [[ $ld_files == "" ]]
then
:
else
args_gcc="$args_standard -I./../ld -I./../bfd  -I./../include"
compile_GCC "$ld_files" "" "" ""
fi
if [[ $libiberty_files == "" ]]
then
:
else
args_gcc="$args_standard -I./../libiberty  -I./../include"
compile_GCC "" "" "$libiberty_files" ""
fi
if [[ $zlib_files == "" ]]
then
:
else
args_gcc="$args_standard -I./../zlib  -I./../include"
compile_GCC "" "" "" "$zlib_files"
fi
fi
echo checking all files are present
for i in $@
do
basename____="$(basename $i |sed s/\.c$//)"
dir____="$(dirname $i | sed s/\.\.\\///)"
if [[ -e ${dir____[0]}____${basename____[0]}.o ]]
then
echo ${dir____[0]}____${basename____[0]}.o found
obj+="$cwd/object_files/${dir____[0]}____${basename____[0]}.o "
files_+="$(readlink ../shared_object_files/$dir____/$basename____.so) "
eval "_$dir____=1"
dirs=($(printf '%b\n' $dirs_ | sort -u))
else
echo ${dir____[0]}____${basename____[0]}.o not found
exit
fi
done
for i in $@
do
dir____="$(dirname $i | sed s/\.\.\\///)"
eval "_$dir____=1"
if [[ $_ld == "1" ]]
then
name=ld_so
elif [[ $_binutils == "1" ]]
then
name=objcopy_so
else
echo not found
declare -p _ld _binutils
exit
fi
done
for i in "${all_files[@]}"
    do
        dir_="$(echo $i | sed s/___.*// | sed s/\.\\/.*\\///)"
        base_="$(echo $i | sed s/.*___// | sed s/___// | sed s/\ -.*// | sed s/..$//)"
        mkdir -v ../shared_object_files/$dir_ 2>/dev/null
        gcc -fPIC --shared $i
done
cd $cwd/
# echo compiling $name.so
echo compiling
gcc $files_ -o $name -ldl
echo testing $name
cd ../
# eval "$cwd/$name 0.o 1.o 2.o 3.o 4.o main.o /usr/lib/crt1.o /usr/lib/crti.o /usr/lib/libc.so /usr/lib/crtn.o -o ./b"
eval "$cwd/$name 0.o 1.o 2.o 3.o 4.o main.o /usr/lib/crt1.o /usr/lib/crti.o /usr/lib/libc.so /usr/lib/crtn.o -o ./b"
cd $cwd/
else
mkdir ../c_files_current 2>/dev/null
mkdir ../c_files_previous 2>/dev/null
mkdir ../c_files_original 2>/dev/null
for i in $@
    do
    dir=$(dirname $i | sed s/\.\.\\///)
    basename=$(basename $i |sed s/\.c$//)
    mkdir ../c_files_current/$dir 2>/dev/null
    mkdir ../c_files_original/$dir 2>/dev/null
    cp -v $i ../c_files_current/$dir/${dir[0]}____$basename.c
    cp -v $i ../c_files_original/$dir/${dir[0]}____$basename.c
done
compile_ $@
fi
cd $cwd
}
clean() {
rm -rfv $cwd/c_* $cwd/object_files $cwd/shared_object_files
}

clean_lite() {
cp -rv $cwd/c_files_previous $cwd/c_files_previous_backup
rm -rfv $cwd/c_files_previous/*
}

# clean
# clean_lite
# compile_ ../binutils/objcopy.c ../binutils/not-strip.c ../binutils/rename.c ../binutils/rddbg.c ../binutils/debug.c ../binutils/stabs.c ../binutils/ieee.c ../binutils/rdcoff.c ../binutils/wrstabs.c ../binutils/bucomm.c ../binutils/version.c ../binutils/filemode.c ../bfd/archive.c ../bfd/archures.c ../bfd/bfd.c ../bfd/bfdio.c ../bfd/bfdwin.c ../bfd/cache.c ../bfd/coff-bfd.c ../bfd/bfdcompress.c ../bfd/corefile.c ../bfd/format.c ../bfd/hash.c ../bfd/init.c ../bfd/libbfd.c ../bfd/linker.c ../bfd/merge.c ../bfd/opncls.c ../bfd/reloc.c ../bfd/section.c ../bfd/simple.c ../bfd/stab-syms.c ../bfd/stabs.c ../bfd/syms.c ../bfd/targets.c ../bfd/binary.c ../bfd/ihex.c ../bfd/srec.c ../bfd/tekhex.c ../bfd/verilog.c ../bfd/elf64-x86-64.c ../bfd/elfxx-x86.c ../bfd/elf-ifunc.c ../bfd/elf-nacl.c ../bfd/elf64.c ../bfd/elf.c ../bfd/elflink.c ../bfd/elf-attrs.c ../bfd/elf-strtab.c ../bfd/elf-properties.c ../bfd/elf-eh-frame.c ../bfd/dwarf1.c ../bfd/dwarf2.c ../bfd/elf32-i386.c ../bfd/elf-vxworks.c ../bfd/elf32.c ../bfd/i386linux.c ../bfd/aout32.c ../bfd/pei-i386.c ../bfd/peigen.c ../bfd/cofflink.c ../bfd/coffgen.c ../bfd/pei-x86_64.c ../bfd/pex64igen.c ../bfd/elf64-gen.c ../bfd/elf32-gen.c ../bfd/plugin.c ../bfd/cpu-i386.c ../bfd/cpu-iamcu.c ../bfd/cpu-l1om.c ../bfd/cpu-k1om.c ../bfd/cpu-plugin.c ../bfd/archive64.c ../zlib/adler32.c ../zlib/compress.c ../zlib/zlibcrc32.c ../zlib/deflate.c ../zlib/gzread.c ../zlib/gzclose.c ../zlib/gzwrite.c ../zlib/gzlib.c ../zlib/infback.c ../zlib/inffast.c ../zlib/inflate.c ../zlib/inftrees.c ../zlib/trees.c ../zlib/uncompr.c ../zlib/zutil.c ../libiberty/regex.c ../libiberty/cplus-dem.c ../libiberty/cp-demangle.c ../libiberty/md5.c ../libiberty/sha1.c ../libiberty/alloca.c ../libiberty/argv.c ../libiberty/choose-temp.c ../libiberty/concat.c ../libiberty/cp-demint.c ../libiberty/crc32.c ../libiberty/d-demangle.c ../libiberty/dwarfnames.c ../libiberty/dyn-string.c ../libiberty/fdmatch.c ../libiberty/fibheap.c ../libiberty/filename_cmp.c ../libiberty/floatformat.c ../libiberty/fnmatch.c ../libiberty/fopen_unlocked.c ../libiberty/getopt.c ../libiberty/getopt1.c ../libiberty/getpwd.c ../libiberty/getruntime.c ../libiberty/hashtab.c ../libiberty/hex.c ../libiberty/lbasename.c ../libiberty/lrealpath.c ../libiberty/make-relative-prefix.c ../libiberty/make-temp-file.c ../libiberty/objalloc.c ../libiberty/obstack.c ../libiberty/partition.c ../libiberty/pexecute.c ../libiberty/physmem.c ../libiberty/pex-common.c ../libiberty/pex-one.c ../libiberty/pex-unix.c ../libiberty/vprintf-support.c ../libiberty/rust-demangle.c ../libiberty/safe-ctype.c ../libiberty/simple-object.c ../libiberty/simple-object-coff.c ../libiberty/simple-object-elf.c ../libiberty/simple-object-mach-o.c ../libiberty/simple-object-xcoff.c ../libiberty/sort.c ../libiberty/spaces.c ../libiberty/splay-tree.c ../libiberty/stack-limit.c ../libiberty/strerror.c ../libiberty/strsignal.c ../libiberty/timeval-utils.c ../libiberty/unlink-if-ordinary.c ../libiberty/xasprintf.c ../libiberty/xatexit.c ../libiberty/xexit.c ../libiberty/xmalloc.c ../libiberty/xmemdup.c ../libiberty/xstrdup.c ../libiberty/xstrerror.c ../libiberty/xstrndup.c ../libiberty/xvasprintf.c  ../libiberty/setproctitle.c

compile_ ../ld/ldgram.c ../ld/ldlex-wrapper.c ../ld/lexsup.c ../ld/ldlang.c ../ld/mri.c ../ld/ldctor.c ../ld/ldmain.c ../ld/ldwrite.c ../ld/ldexp.c ../ld/ldemul.c ../ld/ldver.c ../ld/ldmisc.c ../ld/ldfile.c ../ld/ldcref.c ../ld/ldplugin.c ../ld/ldbuildid.c ../ld/eelf_x86_64.c ../ld/eelf32_x86_64.c ../ld/eelf_i386.c ../ld/eelf_iamcu.c ../ld/ei386linux.c ../ld/eelf_l1om.c ../ld/eelf_k1om.c ../bfd/archive.c ../bfd/archures.c ../bfd/bfd.c ../bfd/bfdio.c ../bfd/bfdwin.c ../bfd/cache.c ../bfd/coff-bfd.c ../bfd/bfdcompress.c ../bfd/corefile.c ../bfd/format.c ../bfd/hash.c ../bfd/init.c ../bfd/libbfd.c ../bfd/linker.c ../bfd/merge.c ../bfd/opncls.c ../bfd/reloc.c ../bfd/section.c ../bfd/simple.c ../bfd/stab-syms.c ../bfd/stabs.c ../bfd/syms.c ../bfd/targets.c ../bfd/binary.c ../bfd/ihex.c ../bfd/srec.c ../bfd/tekhex.c ../bfd/verilog.c ../bfd/elf64-x86-64.c ../bfd/elfxx-x86.c ../bfd/elf-ifunc.c ../bfd/elf-nacl.c ../bfd/elf64.c ../bfd/elf.c ../bfd/elflink.c ../bfd/elf-attrs.c ../bfd/elf-strtab.c ../bfd/elf-properties.c ../bfd/elf-eh-frame.c ../bfd/dwarf1.c ../bfd/dwarf2.c ../bfd/elf32-i386.c ../bfd/elf-vxworks.c ../bfd/elf32.c ../bfd/i386linux.c ../bfd/aout32.c ../bfd/pei-i386.c ../bfd/peigen.c ../bfd/cofflink.c ../bfd/coffgen.c ../bfd/pei-x86_64.c ../bfd/pex64igen.c ../bfd/elf64-gen.c ../bfd/elf32-gen.c ../bfd/plugin.c ../bfd/cpu-i386.c ../bfd/cpu-iamcu.c ../bfd/cpu-l1om.c ../bfd/cpu-k1om.c ../bfd/cpu-plugin.c ../bfd/archive64.c ../zlib/adler32.c ../zlib/compress.c ../zlib/zlibcrc32.c ../zlib/deflate.c ../zlib/gzread.c ../zlib/gzclose.c ../zlib/gzwrite.c ../zlib/gzlib.c ../zlib/infback.c ../zlib/inffast.c ../zlib/inflate.c ../zlib/inftrees.c ../zlib/trees.c ../zlib/uncompr.c ../zlib/zutil.c ../libiberty/regex.c ../libiberty/cplus-dem.c ../libiberty/cp-demangle.c ../libiberty/md5.c ../libiberty/sha1.c ../libiberty/alloca.c ../libiberty/argv.c ../libiberty/choose-temp.c ../libiberty/concat.c ../libiberty/cp-demint.c ../libiberty/crc32.c ../libiberty/d-demangle.c ../libiberty/dwarfnames.c ../libiberty/dyn-string.c ../libiberty/fdmatch.c ../libiberty/fibheap.c ../libiberty/filename_cmp.c ../libiberty/floatformat.c ../libiberty/fnmatch.c ../libiberty/fopen_unlocked.c ../libiberty/getopt.c ../libiberty/getopt1.c ../libiberty/getpwd.c ../libiberty/getruntime.c ../libiberty/hashtab.c ../libiberty/hex.c ../libiberty/lbasename.c ../libiberty/lrealpath.c ../libiberty/make-relative-prefix.c ../libiberty/make-temp-file.c ../libiberty/objalloc.c ../libiberty/obstack.c ../libiberty/partition.c ../libiberty/pexecute.c ../libiberty/physmem.c ../libiberty/pex-common.c ../libiberty/pex-one.c ../libiberty/pex-unix.c ../libiberty/vprintf-support.c ../libiberty/rust-demangle.c ../libiberty/safe-ctype.c ../libiberty/simple-object.c ../libiberty/simple-object-coff.c ../libiberty/simple-object-elf.c ../libiberty/simple-object-mach-o.c ../libiberty/simple-object-xcoff.c ../libiberty/sort.c ../libiberty/spaces.c ../libiberty/splay-tree.c ../libiberty/stack-limit.c ../libiberty/strerror.c ../libiberty/strsignal.c ../libiberty/timeval-utils.c ../libiberty/unlink-if-ordinary.c ../libiberty/xasprintf.c ../libiberty/xatexit.c ../libiberty/xexit.c ../libiberty/xmalloc.c ../libiberty/xmemdup.c ../libiberty/xstrdup.c ../libiberty/xstrerror.c ../libiberty/xstrndup.c ../libiberty/xvasprintf.c  ../libiberty/setproctitle.c
cd ../
rm -v ./b
echo TEST > TEST
echo
echo compiling TEST.o with \'ld_so -r -b binary ./TEST -o ./TEST.o\'
ld_so -r -b binary ./TEST -o ./TEST.o
echo
echo compiling ./d with \'ld_so 0.o 1.o 2.o 3.o 4.o main.o /usr/lib/crt1.o /usr/lib/crti.o /usr/lib/libc.so /usr/lib/crtn.o -o ./b\'
ld_so 0.o 1.o 2.o 3.o 4.o main.o /usr/lib/crt1.o /usr/lib/crti.o /usr/lib/libc.so /usr/lib/crtn.o -o ./b &&
./b list
